{"version":3,"sources":["Storefile.tsx","App.tsx","Actions.ts","HomePage.tsx","FavPage.tsx","index.tsx"],"names":["initialState","episodes","favorites","Store","React","createContext","reducer","state","action","type","Object","objectSpread","payload","concat","toConsumableArray","App","_ref","children","useContext","react_default","a","createElement","Fragment","className","es","to","length","fetchDataAction","asyncToGenerator","regenerator_default","mark","_callee","dispatch","data","dataJSON","wrap","_context","prev","next","fetch","sent","json","abrupt","_embedded","stop","_x","apply","this","arguments","toggleFavAction","episode","episodeInFav","includes","dispatchObj","filter","fav","id","EpisodeList","lazy","__webpack_require__","e","then","bind","RouterPage","props","pageComponent","ReactDOM","render","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","Provider","value","_React$useContext","useEffect","store","Suspense","fallback","path","FavPage_EpisodeList","document","getElementById"],"mappings":"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","file":"static/js/main.302a4894.chunk.js","sourcesContent":["import React from 'react'\r\nimport { IState, IAction } from './interfaces'\r\n\r\nconst initialState: IState = {\r\n  episodes: [],\r\n  favorites: []\r\n}\r\n\r\nexport const Store = React.createContext<IState | any>(initialState)\r\n\r\nfunction reducer(state: IState, action: IAction): IState {\r\n  switch (action.type) {\r\n    case 'FETCH_DATA':\r\n      return { ...state, episodes: action.payload }\r\n    case 'ADD_FAV':\r\n      return { ...state, favorites: [...state.favorites, action.payload] }\r\n    case 'REMOVE_FAV':\r\n      return { ...state, favorites: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function StoreProvider({ children }: JSX.ElementChildrenAttribute): JSX.Element {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState)\r\n  return <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\r\n}","import React from 'react'\nimport { Store } from './Storefile'\nimport { Link } from '@reach/router'\n\nexport default function App({\n  children\n}: {\n  children: JSX.Element\n}): JSX.Element {\n  const { state } = React.useContext(Store)\n\n  return (\n    <React.Fragment>\n      <header className='header'>\n        <div className='headerPart1'>\n          <h1 className='title'>Family Guy</h1>\n          <p className='subtitle'>Pick your favorite Family Guy episode!!!</p>\n        </div>\n        <div  className='tabs'>\n          <Link to='/'  className='linkStyle'>Home</Link>\n          <Link to='/faves'  className='linkStyle'>Favorites: {state.favorites.length}</Link>\n        </div>\n      </header>\n      {children}\n    </React.Fragment>\n  )\n}","import { IAction, IEpisode, IState, Dispatch } from './interfaces'\r\n\r\nexport const fetchDataAction = async (dispatch: Dispatch) => {\r\n  const URL =\r\n    'https://api.tvmaze.com/singlesearch/shows?q=family-guy&embed=episodes'\r\n  const data = await fetch(URL)\r\n  const dataJSON = await data.json()\r\n  return dispatch({\r\n    type: 'FETCH_DATA',\r\n    payload: dataJSON._embedded.episodes\r\n  })\r\n}\r\n\r\nexport const toggleFavAction = (state:IState, dispatch: any, episode: IEpisode | any): IAction => {\r\n  const episodeInFav = state.favorites.includes(episode)\r\n  let dispatchObj = {\r\n    type: 'ADD_FAV',\r\n    payload: episode\r\n  }\r\n  if (episodeInFav) {\r\n    const favWithoutEpisode = state.favorites.filter(\r\n      (fav: IEpisode) => fav.id !== episode.id\r\n    )\r\n    dispatchObj = {\r\n      type: 'REMOVE_FAV',\r\n      payload: favWithoutEpisode\r\n    }\r\n  }\r\n\r\n  return dispatch(dispatchObj)\r\n}","import React from 'react'\r\n\r\nimport App from './App'\r\nimport { Store } from './Storefile'\r\nimport { IEpisodeProps } from './interfaces'\r\nimport { fetchDataAction, toggleFavAction } from './Actions'\r\n\r\nconst EpisodeList = React.lazy<any>(() => import('./EpisodesList'))\r\n\r\nexport default function HomePage() {\r\n  const { state, dispatch } = React.useContext(Store)\r\n\r\n  React.useEffect(() => {\r\n    state.episodes.length === 0 && fetchDataAction(dispatch)\r\n  })\r\n\r\n  const props: IEpisodeProps = {\r\n    episodes: state.episodes,\r\n    store: { state, dispatch },\r\n    toggleFavAction,\r\n    favorites: state.favorites\r\n  }\r\n\r\n  return (\r\n    <App>\r\n      <React.Suspense fallback={<div>loading...</div>}>\r\n        <section className='episode-layout'>\r\n          <EpisodeList {...props} />\r\n        </section>\r\n      </React.Suspense>\r\n    </App>\r\n  )\r\n}","import React from 'react'\r\nimport App from './App'\r\nimport { Store } from './Storefile'\r\nimport { IEpisodeProps } from './interfaces'\r\nimport { toggleFavAction } from './Actions'\r\n\r\nconst EpisodeList = React.lazy<any>(() => import('./EpisodesList'))\r\n\r\nexport default function FavPage(): JSX.Element {\r\n  const { state, dispatch } = React.useContext(Store)\r\n\r\n  const props: IEpisodeProps = {\r\n    episodes: state.favorites,\r\n    store: { state, dispatch },\r\n    toggleFavAction,\r\n    favorites: state.favorites\r\n  }\r\n\r\n  return (\r\n    <App>\r\n      <React.Suspense fallback={<div>loading...</div>}>\r\n        <div className='episode-layout'>\r\n          <EpisodeList {...props} />\r\n        </div>\r\n      </React.Suspense>\r\n    </App>\r\n  )\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport { StoreProvider } from './Storefile';\nimport { Router, RouteComponentProps } from '@reach/router'\nimport HomePage from './HomePage'\nimport FavPage from './FavPage'\n\nconst RouterPage = (\n  props: { pageComponent: JSX.Element } & RouteComponentProps\n) => props.pageComponent\n\n\nReactDOM.render(\n  <StoreProvider>\n    <Router>\n      <RouterPage pageComponent={<HomePage />} path='/' />\n      <RouterPage pageComponent={<FavPage />} path='/faves' />\n    </Router>\n  </StoreProvider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}